  //*********PARAMTROS A CALIBRAR *************************************************************************************************
#include<Servo.h>

Servo ESC;
int velocidad =255; // Velocidad crucero de robot max 255

float Kp = 3.45; // calibracion proporcional.2 2.05
float Kd = 9;  //  calibracion derivativo2.65 7

int frente = 255;   // Velocidad a la que ira el motor hacia adelante cuando pierda la linea max 255
int reversa =  255;  // Velocidad a la que ira el motor hacia atras cuando pierda la linea    max 255

int color = 1;      // 1 linea negra 2 linea blanca
//********CONEXION DE PUERTOS****************************************************************************************************
int OP = A4;   // A0 conectdado a OP    SALIDA DEL MULTIPLEXOR
int S0 = A0;   // A4 conectado a S0     S0 DEL MULTIPLEXOR
int S1 = A1;   // A3 conectado a S1     S1 DEL MULTIPLEXOR
int S2 = A2;   // A1 conectado a S2     S2 DEL MULTIPLEXOR
int S3 = A3;   // A2 conectado a S3     S3 DEL MULTIPLEXOR
int led = 13;  // Led default de Arduino

int pini = 9;
int pwmi = 5;
int pind = 6;
int pwmd = 3;

int go = 8;   // Puerto donde se conecta el arrancador ( si el modulo no esta conectado, debe ponerse una resistencia pull-down)
int rdy = 12;
int boton_izq = 4; // boton izquierdo
int boton_der = 7; // boton derecho
int lon = 11;
//*******VARIABLES A UTILIZAR****************************************************************************************************



int mins1 = 255, mins2 = 255, mins3 = 255, mins4 = 255, mins5 = 255, mins6 = 255, mins7 = 255, mins8 = 255, mins9 = 255, mins10 = 255, mins11 = 255, mins12 = 255, mins13 = 255, mins14 = 255, mins15 = 255, mins16 = 255;

int maxs1 = 0, maxs2 = 0, maxs3 = 0, maxs4 = 0, maxs5 = 0, maxs6 = 0, maxs7 = 0, maxs8 = 0, maxs9 = 0, maxs10 = 0, maxs11 = 0, maxs12 = 0, maxs13 = 0, maxs14 = 0, maxs15 = 0, maxs16 = 0;

int valor_sensor1 = 0, valor_sensor2 = 0, valor_sensor3 = 0, valor_sensor4 = 0, valor_sensor5 = 0, valor_sensor6 = 0, valor_sensor7 = 0, valor_sensor8 = 0;

int valor_sensor9 = 0, valor_sensor10 = 0, valor_sensor11 = 0, valor_sensor12 = 0, valor_sensor13 = 0, valor_sensor14 = 0, valor_sensor15 = 0, valor_sensor16 = 0;

int valor_bd = 0, state_go = 0, state_rdy = 0, allow_off = 0, valor_bi = 0, memory_deg = 0, posicion = 0, MUESTREO = 1, sensibilidad = 100, c = 0, espera = 0, modo = LOW, value_x = 0;
int vel = 1000;
unsigned long presente = 0;
long antes = 0;
long pausa = 70;
unsigned long pasado = 0;
unsigned long ahora;
double ERROR_POSICION = 0;
double ERROR_ULTIMO = 0;
double CX = 0;







void setup()
{
  ESC.attach(10);
  ESC.writeMicroseconds(1000);
  pinMode ( led, OUTPUT);
  pinMode(lon, OUTPUT);
  pinMode ( S0, OUTPUT);
  pinMode ( S1, OUTPUT);
  pinMode ( S2, OUTPUT);
  pinMode ( S3, OUTPUT);
  pinMode ( OP, INPUT);
  pinMode ( go, INPUT);
  pinMode ( boton_izq, INPUT);
  pinMode ( boton_der, INPUT);
  pinMode(rdy, INPUT);

  pinMode(pini, OUTPUT);
  pinMode(pwmi, OUTPUT);
  pinMode(pind, OUTPUT);
  pinMode(pwmd, OUTPUT);
  digitalWrite(lon, HIGH);

rutina1:
  
  delay(1000);
  digitalWrite ( led, HIGH);

rutina2:
  lectura();
  if ( valor_bi == LOW ) {
    value_x = 1;
  }
  if ( valor_bi == HIGH && value_x == 1 ) {
    delay (50);
    goto rutina3;
  }
  goto rutina2;


  //****************************************************************************************************************************************************************************


rutina3:   // Calibracion de sensores

  while ( espera < 4000) {
    lectura();
    if ( valor_bi == LOW ) {
      espera = 5000;
    }
    presente = millis();
    if (presente - antes > pausa) {
      antes = presente;
      if (modo == LOW) {
        modo = HIGH;
      }
      else {
        modo = LOW;
      }
      digitalWrite(led, modo);
    }




    if (valor_sensor1 <  mins1) {
      mins1 = valor_sensor1;
    }
    if (valor_sensor2 <  mins2) {
      mins2 = valor_sensor2;
    }
    if ï»¿<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<assembly manifestVersion="1.0" xmlns="urn:schemas-microsoft-com:asm.v3">
  <assemblyIdentity name="Microsoft-Windows-Server-Features-Package" version="10.0.18362.1256" processorArchitecture="amd64" language="zh-CN" publicKeyToken="31bf3856ad364e35" buildType="release" />
  <package identifier="Microsoft-Windows-Server-Features-Package" releaseType="Language Pack">
    <parent integrate="separate">
      <assemblyIdentity name="Microsoft-Windows-Server-Features-Package" version="10.0.18362.1256" processorArchitecture="amd64" language="neutral" publicKeyToken="31bf3856ad364e35" buildType="release" />
    </parent>
    <update name="172AB0FAA72C9EECC6CA7DE5F9F9B1AA3CC6B6A24D882801B76E7644DDBA3780">
      <component>
        <assemblyIdentity name="microsoft-windows-server-features-deployment0" version="10.0.18362.1256" processorArchitecture="amd64" language="zh-CN" publicKeyToken="31bf3856ad364e35" buildType="release" versionScope="nonSxS" />
      </component>
    </update>
    <update name="881466B9C68F150EC92EDAD1A828595AEE6F82BABF0C41D30E3BC19EAAB2C672">
      <component>
        <assemblyIdentity name="usbcciddriver.inf-LanguagePack" version="10.0.18362.1" processorArchitecture="amd64" language="zh-CN" publicKeyToken="31bf3856ad364e35" buildType="release" versionScope="nonSxS" />
      </component>
    </update>
    <update name="EFCF4A25F23709BA62BE36085671289122D6578AD28C399ACFDE0330D0CC769F">
      <component>
        <assemblyIdentity name="usbser.inf-LanguagePack" version="10.0.18362.1" processorArchitecture="amd64" language="zh-CN" publicKeyToken="31bf3856ad364e35" buildType="release" versionScope="nonSxS" />
      </component>
    </update>
    <update name="8C8632AC434BAF6C692FDD691FDB28391277F5251EF49E4B4B34C2D79864866F">
      <component>
        <assemblyIdentity name="bthpan.inf-LanguagePack" version="10.0.18362.1" processorArchitecture="amd64" language="zh-CN" publicKeyToken="31bf3856ad364e35" buildType="release" versionScope="nonSxS" />
      </component>
    </update>
    <update name="2BAF3EEB1459DB5723E0E2A080AC71406D9E28C7AEAF7377DD133FA59986BC02">
      <component>
        <assemblyIdentity name="urschipidea.inf-LanguagePack" version="10.0.18362.1" processorArchitecture="amd64" language="zh-CN" publicKeyToken="31bf3856ad364e35" buildType="release" versionScope="nonSxS" />
      </component>
    </update>
    <update name="35ED931D7F923A93950A341531D1569A7F58129068E022CA65328C2F0D222CAB">
      <component>
        <assemblyIdentity name="urssynopsys.inf-LanguagePack" version="10.0.18362.1" processorArchitecture="amd64" language="zh-CN" publicKeyToken="31bf3856ad364e35" buildType="release" versionScope="nonSxS" />
      </component>
    </update>
    <update name="CBA75E4E421DB3DB085D0C22AC8C3C8738789D3388B011D9F17D25652B66412E">
      <component>
        <assemblyIdentity name="genericusbfn.inf-LanguagePack" version="10.0.18362.1" processorArchitecture="amd64" language="zh-CN" publicKeyToken="31bf3856ad364e35" buildType="release" versionScope="nonSxS" />
      </component>
    </update>
    <update name="6AE82FF7622534DA662A74AAE4845CEF879FB8A05DDA878B68214ED1E41D4324">
      <component>
        <assemblyIdentity name="ufxchipidea.inf-LanguagePack" version="10.0.18362.1" processorArchitecture="amd64" language="zh-CN" publicKeyToken="31bf3856ad364e35" buildType="release" versionScope="nonSxS" />
      </component>
    </update>
    <update name="518CB4B0191CC5E0E77A46FB957F5EEA526FE0F003003E8C92A7E3CE59D479AA">
      <component>
        <assemblyIdentity name="ufxsynopsys.inf-LanguagePack" version="10.0.18362.1" processorArchitecture="amd64" language="zh-CN" publicKeyToken="31bf3856ad364e35" buildType="release" versionScope="nonSxS" />
      </component>
    </update>
    <update name="D5401E7A3B2163069B0469C0DFC0728A3CAC52F833F51EE85F97CDC8ABA04780">
      <package integrate="hidden">
        <assemblyIdentity name="Microsoft-Windows-Server-Features-Package00" version="10.0.18362.1256" processorArchitecture="amd64" language="zh-CN" publicKeyToken="31bf3856ad364e35" buildType="release" />
      </package>
    </update>
    <update name="Microsoft-Windows-CoreSystem-RemoteFSResourcePackage_update">
      <package integrate="hidden">
        <assemblyIdentity name="Microsoft-Windows-Server-Features-Package01" version="10.0.18362.1256" processorArchitecture="amd64" language="zh-CN" publicKeyToken="31bf3856ad364e35" buildType="release" />
      </package>
    </update>
    <update name="F4BDB5DDF5BB447B825F260EB31A3627367D01F89FF9C05D24FB7B797576C8DA">
      <package integrate="hidden">
        <assemblyIdentity name="Microsoft-Windows-Server-Features-Package02" version="10.0.18362.1256" processorArchitecture="amd64" language="zh-CN" publicKeyToken="31bf3856ad364e35" buildType="release" />
      </package>
    </update>
    <update name="06223130CE9C905BD1B7366E76C0751747032F6FE5256EBC0847A100C28232E0">
      <package integrate="hidden">
        <assemblyIdentity name="Microsoft-Windows-Server-Features-Package03" version="10.0.18362.1237" processorArchitecture="amd64" language="zh-CN" publicKeyToken="31bf3856ad364e35" buildType="release" />
      </package>
    </update>
    <update name="Microsoft-Windows-Desktop-Shared-Package">
      <package integrate="hidden">
        <assemblyIdentity name="Microsoft-Windows-Server-Features-Package04" version="10.0.18362.1237" processorArchitecture="amd64" language="zh-CN" publicKeyToken="31bf3856ad364e35" buildType="release" />
      </package>
    </update>
    <update name="Microsoft-Windows-Basic-Http-Minio-Language-Pack-Update">
      <package integrate="hidden">
        <assemblyIdentity name="Microsoft-Windows-Server-Features-Package05" version="10.0.18362.1256" processorArchitecture="amd64" language="zh-CN" publicKeyToken="31bf3856ad364e35" buildType="release" />
      </package>
    </update>
    <update name="Microsoft-Windows-Server-Features-Remainder-Package">
      <package integrate="hidden">
        <assemblyIdentity name="Microsoft-Windows-Server-Features-Package06" version="10.0.18362.1256" processorArchitecture="amd64" language="zh-CN" publicKeyToken="31bf3856ad364e35" buildType="release" />
      </package>
    </update>
    <update name="Microsoft-OneCore-Security-Ngc-Package">
      <package integrate="hidden">
        <assemblyIdentity name="Microsoft-Windows-Server-Features-Package07" version="10.0.18362.1237" processorArchitecture="amd64" language="zh-CN" publicKeyToken="31bf3856ad364e35" buildType="release" />
      </package>
    </update>
    <update name="Microsoft-Windows-Server-Features-WOW64-Package">
      <package integrate="hidden">
        <assemblyIdentity name="Microsoft-Windows-Server-Features-Package08" version="10.0.18362.1256" processorArchitecture="amd64" language="zh-CN" publicKeyToken="31bf3856ad364e35" buildType="release" />
      </package>
    </update>
  </package>
</assembly>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      nsor16 = analogRead ( OP) / 4;


  if ( color == 2 )
  {

    valor_sensor1 = map(valor_sensor1, 0 , 255 , 255, 0);
    valor_sensor2 = map(valor_sensor2, 0 , 255 , 255, 0);
    valor_sensor3 = map(valor_sensor3, 0 , 255 , 255, 0);
    valor_sensor4 = map(valor_sensor4, 0 , 255 , 255, 0);
    valor_sensor5 = map(valor_sensor5, 0 , 255 , 255, 0);
    valor_sensor6 = map(valor_sensor6, 0 , 255 , 255, 0);
    valor_sensor7 = map(valor_sensor7, 0 , 255 , 255, 0);
    valor_sensor8 = map(valor_sensor8, 0 , 255 , 255, 0);
    valor_sensor9 = map(valor_sensor9, 0 , 255 , 255, 0);
    valor_sensor10 = map(valor_sensor10, 0 , 255 , 255, 0);
    valor_sensor11 = map(valor_sensor11, 0 , 255 , 255, 0);
    valor_sensor12 = map(valor_sensor12, 0 , 255 , 255, 0);
    valor_sensor13 = map(valor_sensor13, 0 , 255 , 255, 0);
    valor_sensor14 = map(valor_sensor14, 0 , 255 , 255, 0);
    valor_sensor15 = map(valor_sensor15, 0 , 255 , 255, 0);
    valor_sensor16 = map(valor_sensor16, 0 , 255 , 255, 0);
  }



  valor_sensor1 = map(valor_sensor1, mins1 , maxs1 , 0, 255);
  valor_sensor2 = map(valor_sensor2, mins2 , maxs2 , 0, 255);
  valor_sensor3 = map(valor_sensor3, mins3 , maxs3 , 0, 255);
  valor_sensor4 = map(valor_sensor4, mins4 , maxs4 , 0, 255);
  valor_sensor5 = map(valor_sensor5, mins5 , maxs5 , 0, 255);
  valor_sensor6 = map(valor_sensor6, mins6 , maxs6 , 0, 255);
  valor_sensor7 = map(valor_sensor7, mins7 , maxs7 , 0, 255);
  valor_sensor8 = map(valor_sensor8, mins8 , maxs8 , 0, 255);
  valor_sensor9 = map(valor_sensor9, mins9 , maxs9 , 0, 255);
  valor_sensor10 = map(valor_sensor10, mins10 , maxs10 , 0, 255);
  valor_sensor11 = map(valor_sensor11, mins11 , maxs11 , 0, 255);
  valor_sensor12 = map(valor_sensor12, mins12 , maxs12 , 0, 255);
  valor_sensor13 = map(valor_sensor13, mins13 , maxs13 , 0, 255);
  valor_sensor14 = map(valor_sensor14, mins14 , maxs14 , 0, 255);
  valor_sensor15 = map(valor_sensor15, mins15 , maxs15 , 0, 255);
  valor_sensor16 = map(valor_sensor16, mins16 , maxs16 , 0, 255);

}

void turbina(int vel)
{
  if (vel != 0)
  {
    ESC.writeMicroseconds(vel); //Generar un pulso con el numero recibido
  }

}
